
 
  def invite_members
    p params[:email]
    User.invite!({:email => params[:email]}, current_user)
  end
<%= form_for @user_assigned_projects do |f| %>
  <% if @user.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@user.errors.count, "error") %> prohibited this user from being saved:</h2>

      <ul>
      <% @user.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <% Project.all.each do |project| %>
      <%= check_box_tag "project[assigned_project_ids][]", project.id %>
      <%= project.title %><br />
    <% end %>
  </div>
  <div class="actions">
    <%= f.submit 'Assign project'%>
  </div>
<% end %>
 @p = params[:project][:user_ids]
    debugger

    def add_member_to_project
    @project_members = @project_id.members
    @user_invitation_accepted = User.invitation_accepted.find_all_by_invited_by_id(current_user)
    @p = params[:member][:user_ids] 
    @p = [] if @p.nil
    @u = User.find_all_by_id(@p)
    @project_id.members = @u
  end

  , :url => add_member_to_project_user_project_path
  project:
  has_many :members :through=> user
  user:
  has_many :assigned_projects :through=> projects
  members:
  belongs_to: user
  belongs_to: project

  debugger
    @u = User.find_all_by_id(params[:project][:user_ids])
    @project_members << @u




    class Users::InvitationsController < Devise::InvitationsController

  before_filter :authenticate_inviter!, :only => [:new, :create]
  before_filter :has_invitations_left?, :only => [:create]
  before_filter :require_no_authentication, :only => [:edit, :update]
  helper_method :after_sign_in_path_for

  # GET /resource/invitation/new
  def new
    build_resource
    render :new
  end

  # POST /resource/invitation
  def create
    self.resource = resource_class.invite!(resource_params, current_inviter)

    if resource.errors.empty?
      set_flash_message :notice, :send_instructions, :email => self.resource.email
      respond_with resource, :location => after_invite_path_for(resource)
    else
      respond_with_navigational(resource) { render :new }
    end
  end

  # GET /resource/invitation/accept?invitation_token=abcdef
  def edit
    if params[:invitation_token] && self.resource = resource_class.to_adapter.find_first( :invitation_token => params[:invitation_token] )
      render :edit
    else
      set_flash_message(:alert, :invitation_token_invalid)
      redirect_to after_sign_out_path_for(resource_name)
    end
  end

  # PUT /resource/invitation
  def update
    self.resource = resource_class.accept_invitation!(resource_params)

    if resource.errors.empty?
      flash_message = resource.active_for_authentication? ? :updated : :updated_not_active                                                                                        
      set_flash_message :notice, flash_message
      sign_in(resource_name, resource)
      respond_with resource, :location => after_accept_path_for(resource)
    else
      respond_with_navigational(resource){ render :edit }
    end
  end

  protected
  def current_inviter
    @current_inviter ||= authenticate_inviter!
  end

  def has_invitations_left?
    unless current_inviter.nil? || current_inviter.has_invitations_left?
      build_resource
      set_flash_message :alert, :no_invitations_remaining
      respond_with_navigational(resource) { render :new }
    end
  end
end

# attachment form #
<%= form_for([@attachable, @attachment]), :html => { :multipart => true } do |f| %>
  <% if @attachment.errors.any? %>
    <div class="alert alert-error">
      <div id="error_explanation">
        <h5><%= pluralize(@attachment.errors.count, "error") %> prohibited this from being saved:</h5>

        <ul>
        <% @attachment.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    </div>
  <% end %>

  <div class="field">
    <%= f.file_field :file %>
  </div>
  <div class="actions">
    <%= f.submit "Comment", :class => "btn btn-info" %>
  </div>
<% end %>